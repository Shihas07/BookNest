<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Room Booking Details</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <style>
    .navbar-custom {
      background-color: rgb(17, 17, 17);
      height: 80px;
    }

    .navbar-brand-custom {
      color: rgb(211, 203, 203);
    }

    .parent-container {
      margin: 20px; /* Adjust margin as needed */
    }

    .left-div, .right-div {
      margin-bottom: 20px;
      background-color: rgb(254,246,233)); /* Adjust margin as needed */
      margin-top: 50px;
    }

    @media (min-width: 768px) {
      .parent-container {
        display: flex;
        justify-content: space-between;
      }

      .left-div {
        flex: 1;
        margin-bottom: 0; /* Reset margin for larger screens */
        margin-right: 20px; /* Add margin-right to create space between left and right divs */
      }

      .right-div {
        flex: 1;
        margin-bottom: 0; /* Reset margin for larger screens */
      }

    }

     .rr,.lf{
      background-color: rgb(237, 237, 241);
      color: rgb(25,135,84);
     }
     
    
    .form-control:focus {
      border-color: rgb(27, 235, 75) !important;
      box-shadow:none !important;
    }
  
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light navbar-custom">
    <div class="container">
      <a class="navbar-brand navbar-brand-custom" href="/">BOOKNEST</a>
      <!-- You can add other navbar items here if needed -->
    </div>
  </nav>
  <div class="container parent-container ">
    <div class="left-div gx-5">
      <div class="rr"> <h2>Booking Details</h2></div>
       
    <form action="" method="post" id="bookingForm" onsubmit="event.preventDefault(); ">

    <div class="mb-3">
        <label for="nameInput" class="form-label">Name</label>
        <input type="text" name="name" class="form-control" id="nameInput" placeholder="Enter your name" value="{{user.userName}}">
    </div>
    <div class="mb-3">
        <label for="emailInput" class="form-label">Email</label>
        <input type="email" class="form-control" id="emailInput" name="email" placeholder="Enter your email" value="{{user.email}}">
        <input type="hidden" name="roomName" value="{{room.roomName}}" id="roomName">
        <input type="hidden" name="roomName" value="{{room.roomName}}" id="">
        <input type="hidden" name="category" value="{{room.category}}" id="category">
        <input type="hidden" name="checkInDate"  value="{{checkInDate}}" id="checkInDate">
        <input type="hidden" name="checkOutDate"  value="{{checkOutDate}}" id="checkOutDate">
        <input type="hidden" name="price"  value="" id="priceInput" id="price">
        <input type="hidden" name="roomid"  value="{{room._id}}" id="roomid">
    </div>
   <button type="button" class="btn btn-success" onclick="razorpay()">Continue</button>

</form>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>



    </div>
    <div class="right-div gx-5">
      <div class="lf"> <h2>Room Details</h2></div>
     
      <div>
        <img src="" class="img-fluid" alt="">
      </div>
      <div>
        <div style="display: inline-block;">
    <img src="{{room.roomImages.[0]}}" alt="uuu" style="width: 100px;">
</div>
<h3 style="display: inline-block; vertical-align: top;"> {{room.roomName}}</h3>

   <h5 style="position: top=20px;">{{room.category}}</h5>

        <p>Check-in Date: {{checkInDate}}</p>
        <p>Check-out Date: {{checkOutDate}}</p>
     <div class="container mt-5">
    <form class="form-inline" action="" id="couponForm">
      <div class="form-group mx-sm-3 mb-2">
        <label for="couponcode" class="sr-only">Coupon Code</label>
        <input type="text" class="form-control form-control-sm" id="couponcode" name="couponcode" placeholder="Enter coupon code">
      </div>
      <button type="submit" class="btn btn-primary mb-2"  id="applyButton">Apply</button>
    </form>
  </div>
        <p> Price: <span id="totalPrice">{{price}}</span></p>
<p>Discount Amount: <span id="discountAmount"></span></p>
<p>Total  Price: <span id="discountedPrice">{{price}}</span></p>

      </div>
    </div>
  </div>
 <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get the data passed from the server
    var userName = "{{user.userName}}";
    var email = "{{user.email}}";
    var roomName = "{{room.roomName}}";
    var checkInDate = "{Check-in Date}}";
    var checkOutDate = "{{checkOutDate}}";
    var totalPrice = "{{totalPrice}}";

    // Log the received data to the console for verification
    console.log('User Name:', userName);
    console.log('Email:', email);
    console.log('Room Name:', roomName);
    console.log('Check-in Date:', checkInDate);
    console.log('Check-out Date:', checkOutDate);
    console.log('Total Price:', totalPrice);

    console.log(totalPrice,{{ couponCode}})
  });
</script>

{{!-- <div class="modal fade" id="bookingSuccessModal" tabindex="-1" aria-labelledby="bookingSuccessModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="bookingSuccessModalLabel">Booking Successful</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Your booking has been successfully completed.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" onclick="location()" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div> --}}
</body>


<script>
  // Add this script to show the modal after form submission
 // document.addEventListener('DOMContentLoaded', function() {
    // Get the URL parameter to check if the booking was successful
   // const urlParams = new URLSearchParams(window.location.search);
    /const bookingSuccess = urlParams.get('success');

    // If booking was successful, show the modal
   // if (bookingSuccess) {
     // var myModal = new bootstrap.Modal(document.getElementById('bookingSuccessModal'), {
       // keyboard: false
      //});
      //myModal.show();
      //closeButton.addEventListener('click', function () {
        //window.location.href = '/bookingdetails'; // Redirect to home page
      //});
  //  }
  //});

</script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
   document.addEventListener('DOMContentLoaded', function() {
  // Add an event listener to the button click
  document.getElementById("applyButton").addEventListener("click", function(event) {
    // Prevent the default form submission
    event.preventDefault();

    // Get the input field value
    var couponCode = document.getElementById("couponcode").value;

    // Make a POST request to the server using Axios
    axios.post("/couponapply", { couponCode: couponCode })
      .then(function(response) {
        // Handle the response if needed
        console.log(response.data);
        var discountAmount = response.data.discountAmount || 0; // If no discount, default to 0
        var totalPrice = parseFloat(document.getElementById("totalPrice").textContent);
        var discountedPrice = totalPrice - discountAmount;

        

        // Update the displayed discount amount
        document.getElementById("discountAmount").textContent = discountAmount;

        // Update the displayed discounted price
        document.getElementById("discountedPrice").textContent = discountedPrice.toFixed(2); // Show only two decimal places
      })
      .catch(function(error) {
        // Handle errors
        console.error("Error:", error);
      });
  });
});

</script>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
   




  




    document.getElementById('bookingForm').addEventListener('submit', function(event) {
        // Prevent default form submission
        event.preventDefault();

        
        

        // Get discountedPrice and priceInput elements
        var discountedPrice = document.getElementById('discountedPrice').innerText;
        var noDisPrice = document.getElementById('totalPrice').innerText;
        


        // Define a function to calculate the value
        function calculatePrice(discountPrice, price) {
            return discountPrice ? discountPrice : price;
        }

        // Set the value of the hidden input field based on the calculated price
        document.getElementById('priceInput').value = calculatePrice(discountedPrice, noDisPrice);

        this.submit()

        
        
    });


    /// RAZORPAY PAYMENT


              function razorpay() {
    const totalValue = document.getElementById("discountedPrice").innerText;
    console.log("sjhfladskjklsjf :", totalValue);

    axios.post('/razorPayment', { total: totalValue })
        .then(response => {
            const { orderId, totalPrice, key_id } = response.data;

            const options = {
                key: key_id,
                amount: totalPrice * 100, // Amount in the smallest currency unit (paise)
                currency: 'INR',
                name: 'Booknest',
                description: 'Test Transaction',
                image: 'https://example.com/your_logo.png',
                order_id: orderId,
                handler: function (razorpayResponse) {
                    // After successful payment, extract necessary data
                    console.log(razorpayResponse)
  const email = document.getElementById("emailInput").value;
    const userName = document.getElementById("nameInput").value;
    const roomName = document.getElementById("roomName").value;
    const category = document.getElementById("category").value;
    const checkInDate = document.getElementById("checkInDate").value;
    const checkOutDate = document.getElementById("checkOutDate").value;
    const price = document.getElementById("priceInput").value;
    const roomid = document.getElementById("roomid").value;

                    

                    
                    const postData = {
                        email,
                        userName,
                        roomName,
                        category,
                        checkInDate,
                        checkOutDate,
                        price: totalValue, 
                        roomid,
                          //orderId: razorpayResponse.razorpay_order_id,
      paymentId: razorpayResponse.razorpay_payment_id


              

                    };
                    console.log("ggg",postData)

                    // Make a POST request to your /booking route using Axios
                    axios.post('/booking', postData)
                        .then(response => {
                            // Handle success response
                            console.log('Booking successful:', response.data);
                            console.log(response )

                        if(response.status == 200) {
                                  Swal.fire({
                                        title: "Booking is  successfully! completed",
                                        text: "Successfully  booked your room!",
                                        icon: "success",
                                        timer: 3000, 
                                        showConfirmButton: false 
                                  }).then(() => {
                                      
                                      setTimeout(function() {
                                          window.location.href = '/bookingdetails';
                                      }, 0); // No delay needed here because SweetAlert's timer has already handled the delay
                                  });
                              }


                        
                           
                        })
                        .catch(error => {
                            // Handle error
                            console.error('Booking failed:', error);
                            // Show error message to the user
                        });
                        
                },
                prefill: {
                    name: 'Shihas',
                    email: 'shihas732@gmail.com',
                    contact: '7994126039',
                },
                theme: {
                    color: '#F37254',
                },
            };

            const rzp = new Razorpay(options);
            rzp.open();
        })
        .catch(error => {
            console.log("Error:", error);
            // Handle error
            // Show error message to the user
        });
}

</script>

</html>
